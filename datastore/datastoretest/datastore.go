// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package storetest

import (
	"context"
	"github.com/ONSdigital/dp-code-list-api/models"
	"sync"
)

var (
	lockDataStoreMockGetCodeList sync.RWMutex
)

// DataStoreMock is a mock implementation of DataStore.
//
//     func TestSomethingThatUsesDataStore(t *testing.T) {
//
//         // make and configure a mocked DataStore
//         mockedDataStore := &DataStoreMock{
//             GetCodeListFunc: func(ctx context.Context, host string, codeListID string) (*models.CodeList, error) {
// 	               panic("TODO: mock out the GetCodeList method")
//             },
//         }
//
//         // TODO: use mockedDataStore in code that requires DataStore
//         //       and then make assertions.
//
//     }
type DataStoreMock struct {
	// GetCodeListFunc mocks the GetCodeList method.
	GetCodeListFunc func(ctx context.Context, host string, codeListID string) (*models.CodeList, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetCodeList holds details about calls to the GetCodeList method.
		GetCodeList []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Host is the host argument value.
			Host string
			// CodeListID is the codeListID argument value.
			CodeListID string
		}
	}
}

// GetCodeList calls GetCodeListFunc.
func (mock *DataStoreMock) GetCodeList(ctx context.Context, host string, codeListID string) (*models.CodeList, error) {
	if mock.GetCodeListFunc == nil {
		panic("DataStoreMock.GetCodeListFunc: method is nil but DataStore.GetCodeList was just called")
	}
	callInfo := struct {
		Ctx        context.Context
		Host       string
		CodeListID string
	}{
		Ctx:        ctx,
		Host:       host,
		CodeListID: codeListID,
	}
	lockDataStoreMockGetCodeList.Lock()
	mock.calls.GetCodeList = append(mock.calls.GetCodeList, callInfo)
	lockDataStoreMockGetCodeList.Unlock()
	return mock.GetCodeListFunc(ctx, host, codeListID)
}

// GetCodeListCalls gets all the calls that were made to GetCodeList.
// Check the length with:
//     len(mockedDataStore.GetCodeListCalls())
func (mock *DataStoreMock) GetCodeListCalls() []struct {
	Ctx        context.Context
	Host       string
	CodeListID string
} {
	var calls []struct {
		Ctx        context.Context
		Host       string
		CodeListID string
	}
	lockDataStoreMockGetCodeList.RLock()
	calls = mock.calls.GetCodeList
	lockDataStoreMockGetCodeList.RUnlock()
	return calls
}
